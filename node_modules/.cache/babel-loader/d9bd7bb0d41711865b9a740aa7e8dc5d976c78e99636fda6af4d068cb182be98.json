{"ast":null,"code":"var _jsxFileName = \"/Users/visheshrao/Desktop/HTSTechSol/src/components/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  function isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (email.trim() === \"\") {\n      setMessage(\"Please enter your email.\");\n      return false;\n    }\n    if (!email.includes(\"@\")) {\n      setMessage(\"An email address must contain '@'.\");\n      return false;\n    }\n    if (!email.includes(\".\")) {\n      setMessage(\"An email address must contain a domain (e.g., '.com').\");\n      return false;\n    }\n    if (!emailRegex.test(email)) {\n      setMessage(\"Enter a valid email address (e.g., user@example.com).\");\n      return false;\n    }\n    if (email.length > 254) {\n      setMessage(\"Email address is too long.\");\n      return false;\n    }\n    if (email.startsWith(\"@\") || email.endsWith(\"@\") || email.endsWith(\".\")) {\n      setMessage(\"Email address cannot start or end with special characters.\");\n      return false;\n    }\n    setMessage(\"\");\n    return true;\n  }\n  function isValidPassword(pass) {\n    const minLength = 8;\n    const upperCaseRegex = /[A-Z]/;\n    const lowerCaseRegex = /[a-z]/;\n    const numberRegex = /[0-9]/;\n    const specialCharRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n    if (pass.trim() === \"\") {\n      setMessage(\"Please enter your password.\");\n      return false;\n    }\n    if (pass.length < minLength) {\n      setMessage(`Password should be at least ${minLength} characters long.`);\n      return false;\n    }\n    if (!upperCaseRegex.test(pass)) {\n      setMessage(\"Password should contain at least one uppercase letter.\");\n      return false;\n    }\n    if (!lowerCaseRegex.test(pass)) {\n      setMessage(\"Password should contain at least one lowercase letter.\");\n      return false;\n    }\n    if (!numberRegex.test(pass)) {\n      setMessage(\"Password should contain at least one number.\");\n      return false;\n    }\n    if (!specialCharRegex.test(pass)) {\n      setMessage(\"Password should contain at least one special character (e.g., !, @, #, etc.).\");\n      return false;\n    }\n    setMessage(\"\");\n    return true;\n  }\n  function submit() {\n    if (isValidEmail(email) && isValidPassword(password)) {\n      setMessage(\"\");\n      navigate(\"/login\", {\n        state: {\n          email,\n          password\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            className: \"form-input\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            className: \"form-input\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: submit,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"pYIZRxIlFAD5+gNNexhYiyUpiX4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","message","setMessage","navigate","isValidEmail","emailRegex","trim","includes","test","length","startsWith","endsWith","isValidPassword","pass","minLength","upperCaseRegex","lowerCaseRegex","numberRegex","specialCharRegex","submit","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/visheshrao/Desktop/HTSTechSol/src/components/login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './login.css';\n\nfunction Login() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const navigate = useNavigate();\n\n    function isValidEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; \n    \n        if (email.trim() === \"\") {\n            setMessage(\"Please enter your email.\");\n            return false;\n        }\n    \n        if (!email.includes(\"@\")) {\n            setMessage(\"An email address must contain '@'.\");\n            return false;\n        }\n    \n        if (!email.includes(\".\")) {\n            setMessage(\"An email address must contain a domain (e.g., '.com').\");\n            return false;\n        }\n    \n        if (!emailRegex.test(email)) {\n            setMessage(\"Enter a valid email address (e.g., user@example.com).\");\n            return false;\n        }\n    \n        if (email.length > 254) {\n            setMessage(\"Email address is too long.\");\n            return false;\n        }\n    \n        if (email.startsWith(\"@\") || email.endsWith(\"@\") || email.endsWith(\".\")) {\n            setMessage(\"Email address cannot start or end with special characters.\");\n            return false;\n        }\n    \n        setMessage(\"\"); \n        return true;\n    }\n    \n\n    function isValidPassword(pass) {\n        const minLength = 8; \n        const upperCaseRegex = /[A-Z]/; \n        const lowerCaseRegex = /[a-z]/; \n        const numberRegex = /[0-9]/; \n        const specialCharRegex = /[!@#$%^&*(),.?\":{}|<>]/;\n    \n        if (pass.trim() === \"\") {\n            setMessage(\"Please enter your password.\");\n            return false;\n        }\n    \n        if (pass.length < minLength) {\n            setMessage(`Password should be at least ${minLength} characters long.`);\n            return false;\n        }\n    \n        if (!upperCaseRegex.test(pass)) {\n            setMessage(\"Password should contain at least one uppercase letter.\");\n            return false;\n        }\n    \n        if (!lowerCaseRegex.test(pass)) {\n            setMessage(\"Password should contain at least one lowercase letter.\");\n            return false;\n        }\n    \n        if (!numberRegex.test(pass)) {\n            setMessage(\"Password should contain at least one number.\");\n            return false;\n        }\n    \n        if (!specialCharRegex.test(pass)) {\n            setMessage(\"Password should contain at least one special character (e.g., !, @, #, etc.).\");\n            return false;\n        }\n    \n        setMessage(\"\"); \n        return true;\n    }\n    \n\n    function submit() {\n        if (isValidEmail(email) && isValidPassword(password)) {\n            setMessage(\"\"); \n            navigate(\"/login\", { state: { email, password } }); \n        }\n    }\n\n    return (\n        <>\n    <div className=\"login-container\">\n        <div className=\"login-form\">\n            <h2 className=\"login-header\">Login</h2>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n                <input \n                    id=\"email\"\n                    type=\"email\" \n                    placeholder=\"Enter your email\" \n                    value={email} \n                    className=\"form-input\"\n                    onChange={(e) => setEmail(e.target.value)} \n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n                <input \n                    id=\"password\"\n                    type=\"password\" \n                    placeholder=\"Enter your password\" \n                    value={password} \n                    className=\"form-input\"\n                    onChange={(e) => setPassword(e.target.value)} \n                />\n            </div>\n            <div className=\"form-group\">\n                <button className=\"login-button\" onClick={submit}>Login</button>\n            </div>\n            {message && <div className=\"message\">{message}</div>}\n        </div>\n    </div>\n</>\n\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}